# Generated by Django 5.2.3 on 2025-06-14 15:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('customer_enrollment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_type', models.CharField(choices=[('residential', 'Residential'), ('business', 'Business'), ('mailing', 'Mailing'), ('registered', 'Registered Office')], default='residential', max_length=20)),
                ('street_address_1', models.CharField(max_length=200, verbose_name='Street Address 1')),
                ('street_address_2', models.CharField(blank=True, max_length=200, verbose_name='Street Address 2')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state_province', models.CharField(blank=True, max_length=100, verbose_name='State/Province')),
                ('postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('country', models.CharField(max_length=3, verbose_name='Country')),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Customer Address',
                'verbose_name_plural': 'Customer Addresses',
                'ordering': ['address_type', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('drivers_license', "Driver's License"), ('utility_bill', 'Utility Bill'), ('bank_statement', 'Bank Statement'), ('proof_of_address', 'Proof of Address'), ('articles_of_incorporation', 'Articles of Incorporation'), ('certificate_of_good_standing', 'Certificate of Good Standing'), ('beneficial_ownership', 'Beneficial Ownership Declaration'), ('other', 'Other')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('processing', 'Processing'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('file_name', models.CharField(max_length=255)),
                ('file_path', models.FileField(upload_to='customer_documents/')),
                ('file_size', models.PositiveIntegerField()),
                ('file_hash', models.CharField(blank=True, max_length=64)),
                ('document_number', models.CharField(blank=True, max_length=100)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('issuing_authority', models.CharField(blank=True, max_length=200)),
                ('issuing_country', models.CharField(blank=True, max_length=3)),
                ('ocr_text', models.TextField(blank=True)),
                ('ocr_confidence', models.FloatField(blank=True, null=True)),
                ('authenticity_score', models.FloatField(blank=True, null=True)),
                ('processing_notes', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Customer Document',
                'verbose_name_plural': 'Customer Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UltimateBeneficialOwner',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('nationality', models.CharField(max_length=3, verbose_name='Nationality')),
                ('ownership_percentage', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Ownership %')),
                ('control_type', models.CharField(blank=True, max_length=50, verbose_name='Control Type')),
                ('address', models.TextField(verbose_name='Address')),
                ('country', models.CharField(max_length=3, verbose_name='Country')),
                ('is_pep', models.BooleanField(default=False, verbose_name='Is PEP')),
                ('pep_details', models.TextField(blank=True, verbose_name='PEP Details')),
                ('sanctions_match', models.BooleanField(default=False, verbose_name='Sanctions Match')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Ultimate Beneficial Owner',
                'verbose_name_plural': 'Ultimate Beneficial Owners',
                'ordering': ['-ownership_percentage', 'last_name', 'first_name'],
            },
        ),
        migrations.RemoveField(
            model_name='customercontactinfo',
            name='customer',
        ),
        migrations.RemoveField(
            model_name='customerpersonaldata',
            name='customer',
        ),
        migrations.AlterModelOptions(
            name='customer',
            options={'ordering': ['-created_at'], 'verbose_name': 'Customer', 'verbose_name_plural': 'Customers'},
        ),
        migrations.RemoveIndex(
            model_name='customer',
            name='customers_status_47bd31_idx',
        ),
        migrations.RenameIndex(
            model_name='customer',
            new_name='customer_en_risk_le_64cf88_idx',
            old_name='customers_risk_le_a3300e_idx',
        ),
        migrations.RenameIndex(
            model_name='customer',
            new_name='customer_en_created_5c5875_idx',
            old_name='customers_created_c63477_idx',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='external_id',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='updated_by',
        ),
        migrations.AddField(
            model_name='customer',
            name='adverse_media',
            field=models.BooleanField(default=False, verbose_name='Adverse Media'),
        ),
        migrations.AddField(
            model_name='customer',
            name='customer_type',
            field=models.CharField(choices=[('individual', 'Individual'), ('entity', 'Legal Entity')], default='individual', max_length=20),
        ),
        migrations.AddField(
            model_name='customer',
            name='date_of_birth',
            field=models.DateField(blank=True, null=True, verbose_name='Date of Birth'),
        ),
        migrations.AddField(
            model_name='customer',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='Email'),
        ),
        migrations.AddField(
            model_name='customer',
            name='entity_name',
            field=models.CharField(blank=True, max_length=200, verbose_name='Entity Name'),
        ),
        migrations.AddField(
            model_name='customer',
            name='entity_type',
            field=models.CharField(blank=True, max_length=50, verbose_name='Entity Type'),
        ),
        migrations.AddField(
            model_name='customer',
            name='first_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='First Name'),
        ),
        migrations.AddField(
            model_name='customer',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=10),
        ),
        migrations.AddField(
            model_name='customer',
            name='incorporation_country',
            field=models.CharField(blank=True, max_length=3, verbose_name='Incorporation Country'),
        ),
        migrations.AddField(
            model_name='customer',
            name='incorporation_date',
            field=models.DateField(blank=True, null=True, verbose_name='Incorporation Date'),
        ),
        migrations.AddField(
            model_name='customer',
            name='last_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Last Name'),
        ),
        migrations.AddField(
            model_name='customer',
            name='last_risk_assessment',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='last_screening_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='customer',
            name='metadata',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='customer',
            name='middle_name',
            field=models.CharField(blank=True, max_length=100, verbose_name='Middle Name'),
        ),
        migrations.AddField(
            model_name='customer',
            name='nationality',
            field=models.CharField(blank=True, max_length=3, verbose_name='Nationality'),
        ),
        migrations.AddField(
            model_name='customer',
            name='pep_status',
            field=models.BooleanField(default=False, verbose_name='PEP Status'),
        ),
        migrations.AddField(
            model_name='customer',
            name='phone',
            field=models.CharField(blank=True, max_length=20, verbose_name='Phone'),
        ),
        migrations.AddField(
            model_name='customer',
            name='place_of_birth',
            field=models.CharField(blank=True, max_length=200, verbose_name='Place of Birth'),
        ),
        migrations.AddField(
            model_name='customer',
            name='sanctions_match',
            field=models.BooleanField(default=False, verbose_name='Sanctions Match'),
        ),
        migrations.AddField(
            model_name='customer',
            name='tax_identifier',
            field=models.CharField(blank=True, max_length=50, verbose_name='Tax Identifier'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='risk_level',
            field=models.CharField(choices=[('low', 'Low Risk'), ('medium', 'Medium Risk'), ('high', 'High Risk'), ('critical', 'Critical Risk')], default='low', max_length=20),
        ),
        migrations.AlterField(
            model_name='customer',
            name='risk_score',
            field=models.IntegerField(default=0, verbose_name='Risk Score'),
        ),
        migrations.AlterField(
            model_name='customer',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('suspended', 'Suspended'), ('closed', 'Closed')], default='pending', max_length=20),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['customer_type', 'status'], name='customer_en_custome_5af886_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['last_screening_date'], name='customer_en_last_sc_e051a8_idx'),
        ),
        migrations.AlterModelTable(
            name='customer',
            table=None,
        ),
        migrations.AddField(
            model_name='customeraddress',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='customer_enrollment.customer'),
        ),
        migrations.AddField(
            model_name='customerdocument',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollment_documents', to='customer_enrollment.customer'),
        ),
        migrations.AddField(
            model_name='customerdocument',
            name='reviewed_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_documents', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customerdocument',
            name='uploaded_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ultimatebeneficialowner',
            name='entity_customer',
            field=models.ForeignKey(limit_choices_to={'customer_type': 'entity'}, on_delete=django.db.models.deletion.CASCADE, related_name='beneficial_owners', to='customer_enrollment.customer'),
        ),
        migrations.DeleteModel(
            name='CustomerContactInfo',
        ),
        migrations.DeleteModel(
            name='CustomerPersonalData',
        ),
        migrations.AddIndex(
            model_name='customerdocument',
            index=models.Index(fields=['customer', 'document_type'], name='customer_en_custome_85727f_idx'),
        ),
        migrations.AddIndex(
            model_name='customerdocument',
            index=models.Index(fields=['status'], name='customer_en_status_035607_idx'),
        ),
        migrations.AddIndex(
            model_name='customerdocument',
            index=models.Index(fields=['uploaded_at'], name='customer_en_uploade_1d5e9a_idx'),
        ),
    ]
