# Generated by Django 5.2.3 on 2025-06-14 10:13

import django.core.validators
import django.db.models.deletion
import document_processing.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_enrollment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('passport', 'Passport'), ('national_id', 'National ID'), ('drivers_license', "Driver's License"), ('proof_of_address', 'Proof of Address'), ('bank_statement', 'Bank Statement'), ('tax_return', 'Tax Return'), ('employment_letter', 'Employment Letter'), ('business_registration', 'Business Registration'), ('other', 'Other')], max_length=100)),
                ('document_number', models.CharField(blank=True, max_length=100)),
                ('issuing_country', models.CharField(blank=True, max_length=100)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('file', models.FileField(upload_to=document_processing.models.document_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('file_hash', models.CharField(max_length=128, unique=True)),
                ('mime_type', models.CharField(max_length=100)),
                ('ocr_data', models.JSONField(blank=True, default=dict)),
                ('extracted_data', models.JSONField(blank=True, default=dict)),
                ('verification_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('requires_manual_review', 'Requires Manual Review')], default='pending', max_length=50)),
                ('verification_details', models.JSONField(blank=True, default=dict)),
                ('forensic_analysis', models.JSONField(blank=True, default=dict)),
                ('authenticity_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='customer_enrollment.customer')),
            ],
            options={
                'db_table': 'customer_documents',
            },
        ),
        migrations.CreateModel(
            name='DocumentProcessingTask',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('task_type', models.CharField(choices=[('ocr', 'OCR Processing'), ('forensic', 'Forensic Analysis'), ('validation', 'Data Validation'), ('categorization', 'Document Categorization')], max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=50)),
                ('task_data', models.JSONField(blank=True, default=dict)),
                ('result_data', models.JSONField(blank=True, default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_tasks', to='document_processing.customerdocument')),
            ],
            options={
                'db_table': 'document_processing_tasks',
            },
        ),
        migrations.CreateModel(
            name='DocumentTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('issuing_authority', models.CharField(blank=True, max_length=200)),
                ('template_name', models.CharField(max_length=200)),
                ('extraction_rules', models.JSONField(default=dict)),
                ('validation_rules', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('confidence_threshold', models.DecimalField(decimal_places=2, default=0.8, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'document_templates',
                'unique_together': {('document_type', 'country', 'template_name')},
            },
        ),
        migrations.AddIndex(
            model_name='customerdocument',
            index=models.Index(fields=['customer', 'document_type'], name='customer_do_custome_a544ca_idx'),
        ),
        migrations.AddIndex(
            model_name='customerdocument',
            index=models.Index(fields=['verification_status'], name='customer_do_verific_a49f86_idx'),
        ),
        migrations.AddIndex(
            model_name='customerdocument',
            index=models.Index(fields=['created_at'], name='customer_do_created_89899f_idx'),
        ),
        migrations.AddIndex(
            model_name='documentprocessingtask',
            index=models.Index(fields=['document', 'task_type'], name='document_pr_documen_3e5554_idx'),
        ),
        migrations.AddIndex(
            model_name='documentprocessingtask',
            index=models.Index(fields=['status'], name='document_pr_status_51afba_idx'),
        ),
        migrations.AddIndex(
            model_name='documentprocessingtask',
            index=models.Index(fields=['created_at'], name='document_pr_created_eb098f_idx'),
        ),
    ]
