# Generated by Django 5.2.3 on 2025-06-14 10:13

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer_enrollment', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ScreeningConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('exact_match_threshold', models.DecimalField(decimal_places=2, default=100.0, max_digits=5)),
                ('fuzzy_match_threshold', models.DecimalField(decimal_places=2, default=85.0, max_digits=5)),
                ('semantic_match_threshold', models.DecimalField(decimal_places=2, default=80.0, max_digits=5)),
                ('phonetic_match_threshold', models.DecimalField(decimal_places=2, default=75.0, max_digits=5)),
                ('source_weights', models.JSONField(blank=True, default=dict)),
                ('high_risk_threshold', models.DecimalField(decimal_places=2, default=90.0, max_digits=5)),
                ('medium_risk_threshold', models.DecimalField(decimal_places=2, default=70.0, max_digits=5)),
                ('max_concurrent_requests', models.PositiveIntegerField(default=10)),
                ('request_timeout', models.PositiveIntegerField(default=30)),
                ('retry_attempts', models.PositiveIntegerField(default=3)),
                ('enable_transliteration', models.BooleanField(default=True)),
                ('enable_semantic_matching', models.BooleanField(default=True)),
                ('enable_phonetic_matching', models.BooleanField(default=True)),
                ('enable_auto_alerts', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'screening_configurations',
            },
        ),
        migrations.CreateModel(
            name='ScreeningSource',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('source_type', models.CharField(choices=[('sanctions', 'Sanctions List'), ('pep', 'Politically Exposed Persons'), ('media', 'Negative Media'), ('corporate', 'Corporate Registry'), ('law_enforcement', 'Law Enforcement')], max_length=50)),
                ('api_url', models.URLField(blank=True)),
                ('data_url', models.URLField(blank=True)),
                ('update_frequency', models.CharField(default='daily', max_length=50)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('jurisdiction', models.CharField(blank=True, max_length=100)),
                ('authority', models.CharField(blank=True, max_length=200)),
                ('license_type', models.CharField(default='open_source', max_length=100)),
                ('reliability_score', models.DecimalField(decimal_places=2, default=1.0, max_digits=3)),
                ('is_active', models.BooleanField(default=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'screening_sources',
                'indexes': [models.Index(fields=['source_type', 'is_active'], name='screening_s_source__d803ce_idx'), models.Index(fields=['code'], name='screening_s_code_a52141_idx')],
            },
        ),
        migrations.CreateModel(
            name='ScreeningResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('query_name', models.CharField(max_length=300)),
                ('query_data', models.JSONField(blank=True, default=dict)),
                ('match_found', models.BooleanField(default=False)),
                ('match_type', models.CharField(blank=True, choices=[('exact', 'Exact Match'), ('fuzzy', 'Fuzzy Match'), ('semantic', 'Semantic Match'), ('phonetic', 'Phonetic Match')], max_length=50)),
                ('confidence_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('matched_name', models.CharField(blank=True, max_length=300)),
                ('matched_entity_id', models.CharField(blank=True, max_length=200)),
                ('match_details', models.JSONField(blank=True, default=dict)),
                ('entity_type', models.CharField(blank=True, max_length=100)),
                ('categories', models.TextField(blank=True)),
                ('sanctions_programs', models.TextField(blank=True)),
                ('raw_response', models.JSONField(blank=True, default=dict)),
                ('processing_time', models.DecimalField(decimal_places=3, default=0, max_digits=8)),
                ('api_version', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screening_results', to='customer_enrollment.customer')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='screening_results', to='sanctions_screening.screeningsource')),
            ],
            options={
                'db_table': 'screening_results',
            },
        ),
        migrations.CreateModel(
            name='ScreeningBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=50)),
                ('total_customers', models.PositiveIntegerField(default=0)),
                ('processed_customers', models.PositiveIntegerField(default=0)),
                ('matches_found', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_completion', models.DateTimeField(blank=True, null=True)),
                ('results_summary', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customers', models.ManyToManyField(related_name='screening_batches', to='customer_enrollment.customer')),
                ('sources', models.ManyToManyField(related_name='screening_batches', to='sanctions_screening.screeningsource')),
            ],
            options={
                'db_table': 'screening_batches',
            },
        ),
        migrations.CreateModel(
            name='ScreeningAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('high_risk_match', 'High Risk Match'), ('new_sanctions', 'New Sanctions Added'), ('source_unavailable', 'Source Unavailable'), ('threshold_exceeded', 'Threshold Exceeded'), ('manual_review_required', 'Manual Review Required')], max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('dismissed', 'Dismissed')], default='active', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('alert_data', models.JSONField(blank=True, default=dict)),
                ('requires_action', models.BooleanField(default=False)),
                ('action_taken', models.TextField(blank=True)),
                ('action_taken_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action_taken_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer_enrollment.customer')),
                ('screening_result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanctions_screening.screeningresult')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sanctions_screening.screeningsource')),
            ],
            options={
                'db_table': 'screening_alerts',
            },
        ),
        migrations.AddIndex(
            model_name='screeningresult',
            index=models.Index(fields=['customer', 'source'], name='screening_r_custome_74d584_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningresult',
            index=models.Index(fields=['match_found', 'confidence_score'], name='screening_r_match_f_d26192_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningresult',
            index=models.Index(fields=['created_at'], name='screening_r_created_7c61ca_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningbatch',
            index=models.Index(fields=['status'], name='screening_b_status_e799a5_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningbatch',
            index=models.Index(fields=['created_at'], name='screening_b_created_ba6368_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningalert',
            index=models.Index(fields=['alert_type', 'severity'], name='screening_a_alert_t_33974e_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningalert',
            index=models.Index(fields=['status'], name='screening_a_status_b05328_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningalert',
            index=models.Index(fields=['customer'], name='screening_a_custome_10500c_idx'),
        ),
        migrations.AddIndex(
            model_name='screeningalert',
            index=models.Index(fields=['created_at'], name='screening_a_created_62e691_idx'),
        ),
    ]
